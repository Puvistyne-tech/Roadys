type Query {
  user(id: ID, pseudo: String, login: String): User
  currentUser: User
  users(data: UsersInput): [User]
}

input UsersInput {
  excludeCurrentUser: Boolean
}

input SigninInput {
  pseudo: String
  email: String
  password: String!
}

input SignupInput {
  pseudo: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  id: ID!
  pseudo: String
  firstname: String
  lastname: String
  latitude: Float
  longitude: Float
  age: Int
  description: String
  nationality: String
  kindOfTrip: String
  isVisibled: Boolean
}

input UpdateCurrentUserInput {
  pseudo: String
  firstname: String
  lastname: String
  latitude: Float
  longitude: Float
  age: Int
  description: String
  nationality: String
  kindOfTrip: String
  isVisibled: Boolean
}

type Mutation {
  updateUser(data: UpdateUserInput): User
  updateCurrentUser(data: UpdateCurrentUserInput): User
  deleteUser(id: ID!): User
  signin(data: SigninInput): User
  signup(data: SignupInput): User
}

type User {
  id: ID
  pseudo: String
  email: String
  jwt: String
  firstname: String
  lastname: String
  latitude: Float
  longitude: Float
  age: Int
  description: String
  nationality: String
  kindOfTrip: String
  isVisibled: Boolean
}